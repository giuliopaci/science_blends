Task: Modeling of neural systems
Description: Debian Science packages for modeling of neural systems
 This metapackage will install Debian packages which might be useful for
 scientists interested in modeling of real neural systems at different
 levels (from single neuron to complex networks).
 .
 The selection of packages is targeting the application of simulation
 techniques. Methods developers are referred to the
 science-statistics, science-imageanalysis,
 science-numericalcomputation, med-imaging, and med-imaging-dev
 metapackages for a variety of additional software that might be
 useful for neuroscience research.



 ; Added by blends-inject 0.0.2. [Please note here if modified manually]
Depends: python-brian
Homepage: http://www.briansimulator.org/
Language: Python, C
WNPP: 602246
Responsible: NeuroDebian Team <team@neuro.debian.net>
License: CeCILL-2
Vcs-Browser: http://git.debian.org/?p=pkg-exppsy/brian.git
Vcs-Git: git://git.debian.org/git/pkg-exppsy/brian.git
Pkg-URL: http://neuro.debian.net/pkgs/python-brian.html
Pkg-Description: simulator for spiking neural networks
 Brian is a clock-driven simulator for spiking neural networks. It is
 designed with an emphasis on flexibility and extensibility, for rapid
 development and refinement of neural models. Neuron models are
 specified by sets of user-specified differential equations, threshold
 conditions and reset conditions (given as strings). The focus is
 primarily on networks of single compartment neuron models (e.g. leaky
 integrate-and-fire or Hodgkin-Huxley type neurons). Features include:
  - a system for specifying quantities with physical dimensions
  - exact numerical integration for linear differential equations
  - Euler, Runge-Kutta and exponential Euler integration for nonlinear
    differential equations
  - synaptic connections with delays
  - short-term and long-term plasticity (spike-timing dependent plasticity)
  - a library of standard model components, including integrate-and-fire
    equations, synapses and ionic currents
  - a toolbox for automatically fitting spiking neuron models to
    electrophysiological recordings
Published-Authors: Goodman D.F. and Brette R.
Published-DOI: 10.3389/neuro.11.005.2008
Published-In: Front. Neuroinform
Published-Title: Brian: a simulator for spiking neural networks in Python
Published-Year: 2008

 ; Added by blends-inject 0.0.3. [Manually changed: Packages are not allowed to contain uper case letters!]
Suggests: pynn
Homepage: http://neuralensemble.org/trac/PyNN
Language: Python
Responsible: NeuroDebian Team <team@neuro.debian.net>
Vcs-Browser: http://git.debian.org/?p=pkg-exppsy/pynn.git
Vcs-Git: git://git.debian.org/git/pkg-exppsy/pynn.git
Pkg-Description: simulator-independent specification of neuronal network models
 PyNN allows to code for a model once and run it without modification
 on any simulator that PyNN supports (currently NEURON, NEST, PCSIM
 and Brian).  PyNN translates standard cell-model names and parameter
 names into simulator-specific names.

Depends: moose
Homepage: http://moose.sourceforge.net
Language: C++, Python
License: LGPL
Pkg-Description: multiscale simulation environment for neuroscience
 MOOSE is the Multiscale Object-Oriented Simulation Environment. It is the base
 and numerical core for large, detailed simulations including Computational
 Neuroscience and Systems Biology.
 MOOSE spans the range from single molecules to sub-cellular networks, from
 single cells to neuronal networks, and to still larger systems. It is
 backwards-compatible with GENESIS, and forward compatible with Python and
 XML-based model definition standards like SBML and MorphML.
 MOOSE is coordinating with the GENESIS-3 project towards the goals of
 developing educational resources for modeling.

