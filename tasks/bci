Task: Brain-computer interface
Description: Debian Science packages for the design and use of
 brain-computer interface (BCI) -- direct communication pathway
 between a brain and an external device. BCIs are often aimed
 at assisting, augmenting or repairing human cognitive or
 sensory-motor functions.
 .
 The selection of packages is targeting the complete frameworks for
 the design of BCI systems.  Often such systems rely on external
 presentation, data collection and analysis software which could be
 found in science-neuroscience-cognitive, science-dataacquisition,
 data-machine-learning metapackages.

 ; Added by blends-inject 0.0.6. [Please note here if modified manually]
Suggests: pyff
Homepage: http://bbci.de/pyff/
Language: Python
License: GPL-2+
Vcs-Browser: https://github.com/venthur/pyff
Vcs-Git: git://github.com/venthur/pyff.git
Pkg-Description: Brain Computer Interface (BCI) framework
 Pyff is a Pythonic Feedback Framework which provides a platform
 independent framework to develop BCI feedback applications in
 Python. It was designed to make the development of feedback
 applications as easy as possible.  Pyff framework moves feedback
 implementations to a general purpose, and easy to learn language like
 Python. Python provides many so called bindings to other libraries,
 which allow it to develop high quality multimedia feedback
 applications, with little effort.
 .
 The framework communicates with the rest of the BCI system via a
 standardized communication protocol using UDP and XML and is
 therefore suitable to be used with any BCI system that may be adapted
 to send its control signal via UDP in the specified format.
Published-Authors: Bastian Venthur, Simon Scholler, John Williamson, Sven Dähne, Matthias S Treder, Maria T Kramarek, Klaus-Robert Müller and Benjamin Blankertz
Published-DOI: 10.3389/fnins.2010.00179
Published-In: Frontiers in Neuroscience
Published-Title: Pyff --- A Pythonic Framework for Feedback Applications and Stimulus Presentation in Neuroscience
Published-Year: 2010

 ; Added by blends-inject 0.0.6. [Please note here if modified manually]
Suggests: pybci
Homepage: http://pybci.sourceforge.net/
Language: Python, C++
License: MIT
Vcs-Browser: http://pybci.git.sourceforge.net/git/gitweb-index.cgi
Vcs-Git: git://pybci.git.sourceforge.net/gitroot/pybci/pybci
Pkg-Description: Brain Computer Interface module for Brain Vision Recorder
 This module gives you the possibility to create a Brain Computer
 Interface (BCI), and herewith to get EEG data online and evaluate the
 data while you are receiving it.  The module is made for all users of
 the Brain Vision Recorder because of the therein implemented function
 of Remote Data Access. It is not possible to use it with another EEG
 Recorder Software, but this will be a project in the future.
 .
 Using the PyBCI module, you are able to get a numpy data array in up
 to every few ten milliseconds and therewith evaluate the data almost
 in realtime with other powerful Python packages, for example using
 PyMVPA.
Remark: No activity since Sep 2009

 ; Added by blends-inject 0.0.6. [Please note here if modified manually]
Suggests: bcpy2000
Homepage: http://bci2000.org/downloads/BCPy2000/BCPy2000.html
Language: Python, C++
License: LGPL-3+ and GPL-3+ and non-free (BCI2000)
Pkg-Description: platform for brain-computer interface systems
 BCPy2000 provides a platform for rapid, flexible development of
 experimental brain-computer interface systems. It is based on, and
 hosted by, the BCI2000 project. From the developer's point of view,
 the implementation is carried out in Python, taking advantage of
 various high-level packages: VisionEgg for stimulus presentation,
 NumPy and SciPy for signal processing and classification, and IPython
 for interactive debugging.
 .
 Being a BCI2000 system, it is modular, consisting of an Application
 module (the stimulus presentation part), a Signal Processing module
 (the machine-learning part), and a Signal Source module (the toy data
 generation part). You can choose to use Python to implement one, two,
 or all three of these modules, and use other pre-existing BCI2000
 modules for the remainder of the system (for example, for the Signal
 Source, you can choose from BCI2000's comprehensive range of EEG
 acquisition modules). The modules communicate over TCP/IP, so they
 can run on different machines (and possibly different operating
 systems) if necessary.

 ; Added by blends-inject 0.0.6. [Please note here if modified manually]
Suggests: bci2000
Homepage: http://bci2000.org
Language: C++
License: non-free (non-redistributable, non-commercial)
Pkg-Description: platform for brain-computer interface systems
 BCI2000 supports a variety of data acquisition systems, brain
 signals, and study/feedback paradigms. During operation, BCI2000
 stores data in a common format (BCI2000 native or GDF), along with
 all relevant event markers and information about system
 configuration. BCI2000 also includes several tools for data
 import/conversion (e.g., a routine to load BCI2000 data files
 directly into Matlab) and export facilities into ASCII.
 .
 BCI2000 also facilitates interactions with other software.  For
 example, Matlab scripts can be executed in real-time from within
 BCI2000, or BCI2000 filters can be compiled to execute as stand-alone
 programs.  Furthermore, a simple network-based interface allows for
 interactions with external programs written in any programming
 language.  For example, a robotic arm application that is external to
 BCI2000 may be controlled in real time based on brain signals
 processed by BCI2000, or BCI2000 may use and store along with brain
 signals behavioral-based inputs such as eye-tracker coordinates.
Registration: http://www.bci2000.org/MTA
Remark: Besides non-commercial restriction, it is required that
 "ACADEMIC USER must be an investigator / lab director (and not a
 post-doc or student)". Re-distribution (to third-party) is also
 forbidden.

 ; Added by blends-inject 0.0.6. [Please note here if modified manually]
Suggests: emokit
Homepage: https://github.com/daeken/Emokit
Language: Python, C
License: BSD-3
Vcs-Browser: https://github.com/daeken/Emokit
Vcs-Git: git://github.com/daeken/Emokit.git
Pkg-Description: Emotiv EPOC headset Python interface
 Emotive is an interface to a budget Emotiv EPOC EEG headset.

 ; Added by blends-inject 0.0.6. [Please note here if modified manually]
Suggests: openvibe
Homepage: http://openvibe.inria.fr
Language: C++
WNPP: 580247
License: LGPL
Pkg-Description: platform for the design, test and use of BCI
 OpenViBE enables to design, test and use Brain-Computer Interfaces (BCI).
 OpenViBE is a software for real-time neurosciences (that is, for
 real-time processing of brain signals). It can be used to acquire, filter,
 process, classify and visualize brain signals in real time.
